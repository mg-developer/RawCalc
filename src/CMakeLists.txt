
INCLUDE_DIRECTORIES(
    ${CUDA_INCLUDE_DIRS}
    ${CUDA_TOOLKIT_ROOT_DIR}
    ${CUDA_HELPER_DIR}
    #Export header:
    ${CMAKE_CURRENT_BINARY_DIR}
)

SET(SOURCES
    RawCalc.cpp
)

SET(CUDA_SOURCES
    ProgGPU.cu
)

SET(CUDA_VERBOSE_BUILD ON CACHE BOOL "nvcc verbose" FORCE)
SET(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE OFF)
SET(BUILD_SHARED_LIBS ON)
SET(CUDA_SEPARATE_COMPILATION ON)

ADD_DEFINITIONS(-DBUILD_LIBRARY)
CUDA_ADD_LIBRARY(${PRJ_NAME} SHARED
    ${CUDA_SOURCES}
    ${SOURCES}
)
INCLUDE(GenerateExportHeader)
GENERATE_EXPORT_HEADER( ${PRJ_NAME}
    BASE_NAME ${PRJ_NAME}
    EXPORT_MACRO_NAME ${PRJ_NAME}_EXPORT
    EXPORT_FILE_NAME ${PRJ_NAME}_Export.h
    STATIC_DEFINE ${PRJ_NAME}_BUILT_AS_STATIC
)

SET_TARGET_PROPERTIES(${PRJ_NAME} PROPERTIES DEFINE_SYMBOL "COMPILING_DLL")
SET_TARGET_PROPERTIES(${PRJ_NAME} PROPERTIES INSTALL_RPATH ".")

#MESSAGE(STATUS ${CUDA_PATH})

TARGET_LINK_LIBRARIES(${PRJ_NAME}
    ${CUDA_LIBRARIES}
    ${PLATFORM_SPECIFIC_LIBRARIES}

    # Temporary link to the driver library until cu* symbols problem is solved.
    libcuda.so

)

INSTALL(TARGETS ${PRJ_NAME}
    RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}
    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}
    ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}
)


